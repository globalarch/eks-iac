---
  - hosts: shard
    remote_user: root
    become: yes
    tasks:
      - name: Ensure MongoDB stopped
        ansible.builtin.service:
          name: mongod
          state: stopped
      - name: Read setting yaml
        ansible.builtin.slurp:
          path: /etc/mongod.conf
        register: mongo_conf
      - name: Extract data from config
        ansible.builtin.set_fact:
          mongo_yaml: "{{ mongo_conf['content'] | b64decode | from_yaml }}"

      - name: Edit config (us-west-2)
        ansible.utils.update_fact:
          updates:
            - path: mongo_yaml.sharding
              value:
                clusterRole: shardsvr
            - path: mongo_yaml.replication
              value:
                replSetName: us-west-2
            - path: mongo_yaml.net.port
              value: 27018
        register: result_conf
        when: inventory_hostname in groups['us-west-2']
      - ansible.builtin.set_fact: updated_conf="{{ result_conf['mongo_yaml'] }}"
        when: not ('skipped' in result_conf and result_conf['skipped']) and not ('failed' in result_conf and result_conf['failed'])

      - name: Edit config (ap-southeast-1)
        ansible.utils.update_fact:
          updates:
            - path: mongo_yaml.sharding
              value:
                clusterRole: shardsvr
            - path: mongo_yaml.replication
              value:
                replSetName: ap-southeast-1
            - path: mongo_yaml.net.port
              value: 27018
        register: result_conf
        when: inventory_hostname in groups['ap-southeast-1']
      - ansible.builtin.set_fact: updated_conf="{{ result_conf['mongo_yaml'] }}"
        when: not ('skipped' in result_conf and result_conf['skipped']) and not ('failed' in result_conf and result_conf['failed'])

      # - name: Edit config (eu-west-2)
      #   ansible.utils.update_fact:
      #     updates:
      #       - path: mongo_yaml.sharding
      #         value:
      #           clusterRole: shardsvr
      #       - path: mongo_yaml.replication
      #         value:
      #           replSetName: eu-west-2
      #       - path: mongo_yaml.net.port
      #         value: 27018
      #   register: result_conf
      #   when: inventory_hostname in groups['eu-west-2']
      # - ansible.builtin.set_fact: updated_conf="{{ result_conf['mongo_yaml'] }}"
      #   when: not ('skipped' in result_conf and result_conf['skipped']) and not ('failed' in result_conf and result_conf['failed'])
      
      - name: Write config
        ansible.builtin.copy:
          content: "{{ updated_conf | to_nice_yaml }}"
          dest: /etc/mongod.conf
      - name: Ensure MongoDB started
        ansible.builtin.service:
          name: mongod
          state: started
